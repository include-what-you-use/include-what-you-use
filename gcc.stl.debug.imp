# GCC STL debug headers
[
  # Note: make sure to sync this setting with iwyu_include_picker.cc
  #
  # I don't have a reusable pipeline for the debug headers, but they're pretty
  # straightforward (<debug/xx> maps to <xx>, and then private-to-private for
  # the rest).
  { "include": ["<debug/bitset>", private, "<bitset>", "public" ] },
  { "include": ["<debug/deque>", private, "<deque>", "public" ] },
  { "include": ["<debug/forward_list>", private, "<forward_list>", "public" ] },
  { "include": ["<debug/list>", private, "<list>", "public" ] },
  { "include": ["<debug/map.h>", private, "<debug/map>", private ] },
  { "include": ["<debug/map>", private, "<map>", "public" ] },
  { "include": ["<debug/multimap.h>", private, "<debug/map>", private ] },
  { "include": ["<debug/multiset.h>", private, "<debug/set>", private ] },
  { "include": ["<debug/safe_container.h>", private, "<debug/deque>", private ] },
  { "include": ["<debug/safe_container.h>", private, "<debug/forward_list>", private ] },
  { "include": ["<debug/safe_container.h>", private, "<debug/list>", private ] },
  { "include": ["<debug/safe_container.h>", private, "<debug/string>", private ] },
  { "include": ["<debug/safe_container.h>", private, "<debug/unordered_map>", private ] },
  { "include": ["<debug/safe_container.h>", private, "<debug/unordered_set>", private ] },
  { "include": ["<debug/safe_container.h>", private, "<debug/vector>", private ] },
  { "include": ["<debug/safe_iterator.h>", private, "<debug/bitset>", private ] },
  { "include": ["<debug/safe_iterator.h>", private, "<debug/deque>", private ] },
  { "include": ["<debug/safe_iterator.h>", private, "<debug/forward_list>", private ] },
  { "include": ["<debug/safe_iterator.h>", private, "<debug/list>", private ] },
  { "include": ["<debug/safe_iterator.h>", private, "<debug/string>", private ] },
  { "include": ["<debug/safe_iterator.h>", private, "<debug/unordered_map>", private ] },
  { "include": ["<debug/safe_iterator.h>", private, "<debug/unordered_set>", private ] },
  { "include": ["<debug/safe_iterator.h>", private, "<debug/vector>", private ] },
  { "include": ["<debug/safe_iterator.tcc>", private, "<debug/safe_iterator.h>", private ] },
  { "include": ["<debug/safe_local_iterator.h>", private, "<debug/unordered_map>", private ] },
  { "include": ["<debug/safe_local_iterator.h>", private, "<debug/unordered_set>", private ] },
  { "include": ["<debug/safe_local_iterator.tcc>", private, "<debug/safe_local_iterator.h>", private ] },
  { "include": ["<debug/safe_sequence.h>", private, "<debug/bitset>", private ] },
  { "include": ["<debug/safe_sequence.h>", private, "<debug/deque>", private ] },
  { "include": ["<debug/safe_sequence.h>", private, "<debug/forward_list>", private ] },
  { "include": ["<debug/safe_sequence.h>", private, "<debug/list>", private ] },
  { "include": ["<debug/safe_sequence.h>", private, "<debug/string>", private ] },
  { "include": ["<debug/safe_sequence.h>", private, "<debug/vector>", private ] },
  { "include": ["<debug/safe_sequence.tcc>", private, "<debug/safe_sequence.h>", private ] },
  { "include": ["<debug/safe_unordered_container.h>", private, "<debug/unordered_map>", private ] },
  { "include": ["<debug/safe_unordered_container.h>", private, "<debug/unordered_set>", private ] },
  { "include": ["<debug/safe_unordered_container.tcc>", private, "<debug/safe_unordered_container.h>", private ] },
  { "include": ["<debug/set.h>", private, "<debug/set>", private ] },
  { "include": ["<debug/set>", private, "<set>", "public" ] },
  { "include": ["<debug/string>", private, "<string>", "public" ] },
  { "include": ["<debug/unordered_map>", private, "<unordered_map>", "public" ] },
  { "include": ["<debug/unordered_set>", private, "<unordered_set>", "public" ] },
  { "include": ["<debug/vector>", private, "<vector>", "public" ] }
]
