# libc++ headers
[
  { "include": ["<__mutex_base>", "private", "<mutex>", "public"] },
  { "include": ["<__tree>", "private", "<set>", "public"] },
  { "include": ["<__tree>", "private", "<map>", "public"] },

  # For the following entries:
  # cd llvm-project/libcxx/include ; find -type d -name "__*" | sort | sed -e 's#./__\(.*\)#  { "include": ["@<__\1/.*>", "private", "<\1>", "public"] },#'
  #
  # tweak locale_dir entry, and comment out debug_utils, fwd, pstl, support
  { "include": ["@<__algorithm/.*>", "private", "<algorithm>", "public"] },
  { "include": ["@<__atomic/.*>", "private", "<atomic>", "public"] },
  { "include": ["@<__bit/.*>", "private", "<bit>", "public"] },
  { "include": ["@<__charconv/.*>", "private", "<charconv>", "public"] },
  { "include": ["@<__chrono/.*>", "private", "<chrono>", "public"] },
  { "include": ["@<__compare/.*>", "private", "<compare>", "public"] },
  { "include": ["@<__concepts/.*>", "private", "<concepts>", "public"] },
  { "include": ["@<__condition_variable/.*>", "private", "<condition_variable>", "public"] },
  { "include": ["@<__coroutine/.*>", "private", "<coroutine>", "public"] },
  #{ "include": ["@<__debug_utils/.*>", "private", "<debug_utils>", "public"] },
  { "include": ["@<__exception/.*>", "private", "<exception>", "public"] },
  { "include": ["@<__expected/.*>", "private", "<expected>", "public"] },
  { "include": ["@<__filesystem/.*>", "private", "<filesystem>", "public"] },
  { "include": ["@<__format/.*>", "private", "<format>", "public"] },
  { "include": ["@<__functional/.*>", "private", "<functional>", "public"] },
  #{ "include": ["@<__fwd/.*>", "private", "<fwd>", "public"] },
  { "include": ["@<__ios/.*>", "private", "<ios>", "public"] },
  { "include": ["@<__iterator/.*>", "private", "<iterator>", "public"] },
  { "include": ["@<__locale_dir/.*>", "private", "<locale>", "public"] },
  { "include": ["@<__mdspan/.*>", "private", "<mdspan>", "public"] },
  { "include": ["@<__memory/.*>", "private", "<memory>", "public"] },
  { "include": ["@<__memory_resource/.*>", "private", "<memory_resource>", "public"] },
  { "include": ["@<__mutex/.*>", "private", "<mutex>", "public"] },
  { "include": ["@<__numeric/.*>", "private", "<numeric>", "public"] },
  #{ "include": ["@<__pstl/.*>", "private", "<pstl>", "public"] },
  { "include": ["@<__random/.*>", "private", "<random>", "public"] },
  { "include": ["@<__ranges/.*>", "private", "<ranges>", "public"] },
  { "include": ["@<__stop_token/.*>", "private", "<stop_token>", "public"] },
  { "include": ["@<__string/.*>", "private", "<string>", "public"] },
  #{ "include": ["@<__support/.*>", "private", "<support>", "public"] },
  { "include": ["@<__system_error/.*>", "private", "<system_error>", "public"] },
  { "include": ["@<__thread/.*>", "private", "<thread>", "public"] },
  { "include": ["@<__tuple/.*>", "private", "<tuple>", "public"] },
  { "include": ["@<__type_traits/.*>", "private", "<type_traits>", "public"] },
  { "include": ["@<__utility/.*>", "private", "<utility>", "public"] },
  { "include": ["@<__variant/.*>", "private", "<variant>", "public"] },

  # For the following entries:
  # cd llvm-project/libcxx/include ; find __fwd -type f -name "*.h" | sort | sed -e 's#__fwd/\(.*\).h#  { "include": ["<__fwd/\1.h>", "private", "<\1>", "public"] },#'
  #
  # tweak hash, pair, subrange entries, and comment out bit_reference, get
  { "include": ["<__fwd/array.h>", "private", "<array>", "public"] },
  #{ "include": ["<__fwd/bit_reference.h>", "private", "<bit_reference>", "public"] },
  { "include": ["<__fwd/fstream.h>", "private", "<fstream>", "public"] },
  #{ "include": ["<__fwd/get.h>", "private", "<get>", "public"] },
  { "include": ["<__fwd/hash.h>", "private", "<functional>", "public"] },
  { "include": ["<__fwd/ios.h>", "private", "<ios>", "public"] },
  { "include": ["<__fwd/istream.h>", "private", "<istream>", "public"] },
  { "include": ["<__fwd/mdspan.h>", "private", "<mdspan>", "public"] },
  { "include": ["<__fwd/memory_resource.h>", "private", "<memory_resource>", "public"] },
  { "include": ["<__fwd/ostream.h>", "private", "<ostream>", "public"] },
  { "include": ["<__fwd/pair.h>", "private", "<utility>", "public"] },
  { "include": ["<__fwd/span.h>", "private", "<span>", "public"] },
  { "include": ["<__fwd/sstream.h>", "private", "<sstream>", "public"] },
  { "include": ["<__fwd/streambuf.h>", "private", "<streambuf>", "public"] },
  { "include": ["<__fwd/string.h>", "private", "<string>", "public"] },
  { "include": ["<__fwd/string_view.h>", "private", "<string_view>", "public"] },
  { "include": ["<__fwd/subrange.h>", "private", "<ranges>", "public"] },
  { "include": ["<__fwd/tuple.h>", "private", "<tuple>", "public"] },

  { "symbol": [ "std::nullptr_t", "private", "<cstddef>", "public"] },

  # For older MacOS libc++ (13.0.0), on macOS Ventura (13.2.1)
  { "include": ["<__functional_base>", "private", "<functional>", "public"] },

  # For older libc++ (16.x)
  { "include": ["@<__tuple_dir/.*>", "private", "<tuple>", "public"] },

  { "symbol": [ "std::string", "private", "<string>", "public"] },
]
